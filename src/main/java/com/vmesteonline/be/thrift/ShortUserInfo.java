/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.vmesteonline.be.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ShortUserInfo implements org.apache.thrift.TBase<ShortUserInfo, ShortUserInfo._Fields>, java.io.Serializable, Cloneable, Comparable<ShortUserInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ShortUserInfo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField FIRST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("firstName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LAST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("rating", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField AVATAR_FIELD_DESC = new org.apache.thrift.protocol.TField("avatar", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField GROUP_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("groupType", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField MODERATION_GROUPS_FIELD_DESC = new org.apache.thrift.protocol.TField("moderationGroups", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SERVICES_FIELD_DESC = new org.apache.thrift.protocol.TField("services", org.apache.thrift.protocol.TType.SET, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ShortUserInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ShortUserInfoTupleSchemeFactory());
  }

  public long id; // required
  public String firstName; // required
  public String lastName; // required
  public int rating; // required
  public String avatar; // required
  /**
   * 
   * @see GroupType
   */
  public GroupType groupType; // required
  public Set<Long> moderationGroups; // optional
  public String address; // optional
  public Set<ServiceType> services; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    FIRST_NAME((short)2, "firstName"),
    LAST_NAME((short)3, "lastName"),
    RATING((short)4, "rating"),
    AVATAR((short)5, "avatar"),
    /**
     * 
     * @see GroupType
     */
    GROUP_TYPE((short)6, "groupType"),
    MODERATION_GROUPS((short)7, "moderationGroups"),
    ADDRESS((short)8, "address"),
    SERVICES((short)9, "services");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // FIRST_NAME
          return FIRST_NAME;
        case 3: // LAST_NAME
          return LAST_NAME;
        case 4: // RATING
          return RATING;
        case 5: // AVATAR
          return AVATAR;
        case 6: // GROUP_TYPE
          return GROUP_TYPE;
        case 7: // MODERATION_GROUPS
          return MODERATION_GROUPS;
        case 8: // ADDRESS
          return ADDRESS;
        case 9: // SERVICES
          return SERVICES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __RATING_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.MODERATION_GROUPS,_Fields.ADDRESS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FIRST_NAME, new org.apache.thrift.meta_data.FieldMetaData("firstName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_NAME, new org.apache.thrift.meta_data.FieldMetaData("lastName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATING, new org.apache.thrift.meta_data.FieldMetaData("rating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AVATAR, new org.apache.thrift.meta_data.FieldMetaData("avatar", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GROUP_TYPE, new org.apache.thrift.meta_data.FieldMetaData("groupType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, GroupType.class)));
    tmpMap.put(_Fields.MODERATION_GROUPS, new org.apache.thrift.meta_data.FieldMetaData("moderationGroups", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICES, new org.apache.thrift.meta_data.FieldMetaData("services", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ServiceType.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ShortUserInfo.class, metaDataMap);
  }

  public ShortUserInfo() {
  }

  public ShortUserInfo(
    long id,
    String firstName,
    String lastName,
    int rating,
    String avatar,
    GroupType groupType,
    Set<ServiceType> services)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.firstName = firstName;
    this.lastName = lastName;
    this.rating = rating;
    setRatingIsSet(true);
    this.avatar = avatar;
    this.groupType = groupType;
    this.services = services;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ShortUserInfo(ShortUserInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetFirstName()) {
      this.firstName = other.firstName;
    }
    if (other.isSetLastName()) {
      this.lastName = other.lastName;
    }
    this.rating = other.rating;
    if (other.isSetAvatar()) {
      this.avatar = other.avatar;
    }
    if (other.isSetGroupType()) {
      this.groupType = other.groupType;
    }
    if (other.isSetModerationGroups()) {
      Set<Long> __this__moderationGroups = new HashSet<Long>(other.moderationGroups);
      this.moderationGroups = __this__moderationGroups;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetServices()) {
      Set<ServiceType> __this__services = new HashSet<ServiceType>(other.services.size());
      for (ServiceType other_element : other.services) {
        __this__services.add(other_element);
      }
      this.services = __this__services;
    }
  }

  public ShortUserInfo deepCopy() {
    return new ShortUserInfo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.firstName = null;
    this.lastName = null;
    setRatingIsSet(false);
    this.rating = 0;
    this.avatar = null;
    this.groupType = null;
    this.moderationGroups = null;
    this.address = null;
    this.services = null;
  }

  public long getId() {
    return this.id;
  }

  public ShortUserInfo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getFirstName() {
    return this.firstName;
  }

  public ShortUserInfo setFirstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  public void unsetFirstName() {
    this.firstName = null;
  }

  /** Returns true if field firstName is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstName() {
    return this.firstName != null;
  }

  public void setFirstNameIsSet(boolean value) {
    if (!value) {
      this.firstName = null;
    }
  }

  public String getLastName() {
    return this.lastName;
  }

  public ShortUserInfo setLastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  public void unsetLastName() {
    this.lastName = null;
  }

  /** Returns true if field lastName is set (has been assigned a value) and false otherwise */
  public boolean isSetLastName() {
    return this.lastName != null;
  }

  public void setLastNameIsSet(boolean value) {
    if (!value) {
      this.lastName = null;
    }
  }

  public int getRating() {
    return this.rating;
  }

  public ShortUserInfo setRating(int rating) {
    this.rating = rating;
    setRatingIsSet(true);
    return this;
  }

  public void unsetRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  /** Returns true if field rating is set (has been assigned a value) and false otherwise */
  public boolean isSetRating() {
    return EncodingUtils.testBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  public void setRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATING_ISSET_ID, value);
  }

  public String getAvatar() {
    return this.avatar;
  }

  public ShortUserInfo setAvatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

  public void unsetAvatar() {
    this.avatar = null;
  }

  /** Returns true if field avatar is set (has been assigned a value) and false otherwise */
  public boolean isSetAvatar() {
    return this.avatar != null;
  }

  public void setAvatarIsSet(boolean value) {
    if (!value) {
      this.avatar = null;
    }
  }

  /**
   * 
   * @see GroupType
   */
  public GroupType getGroupType() {
    return this.groupType;
  }

  /**
   * 
   * @see GroupType
   */
  public ShortUserInfo setGroupType(GroupType groupType) {
    this.groupType = groupType;
    return this;
  }

  public void unsetGroupType() {
    this.groupType = null;
  }

  /** Returns true if field groupType is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupType() {
    return this.groupType != null;
  }

  public void setGroupTypeIsSet(boolean value) {
    if (!value) {
      this.groupType = null;
    }
  }

  public int getModerationGroupsSize() {
    return (this.moderationGroups == null) ? 0 : this.moderationGroups.size();
  }

  public java.util.Iterator<Long> getModerationGroupsIterator() {
    return (this.moderationGroups == null) ? null : this.moderationGroups.iterator();
  }

  public void addToModerationGroups(long elem) {
    if (this.moderationGroups == null) {
      this.moderationGroups = new HashSet<Long>();
    }
    this.moderationGroups.add(elem);
  }

  public Set<Long> getModerationGroups() {
    return this.moderationGroups;
  }

  public ShortUserInfo setModerationGroups(Set<Long> moderationGroups) {
    this.moderationGroups = moderationGroups;
    return this;
  }

  public void unsetModerationGroups() {
    this.moderationGroups = null;
  }

  /** Returns true if field moderationGroups is set (has been assigned a value) and false otherwise */
  public boolean isSetModerationGroups() {
    return this.moderationGroups != null;
  }

  public void setModerationGroupsIsSet(boolean value) {
    if (!value) {
      this.moderationGroups = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public ShortUserInfo setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public int getServicesSize() {
    return (this.services == null) ? 0 : this.services.size();
  }

  public java.util.Iterator<ServiceType> getServicesIterator() {
    return (this.services == null) ? null : this.services.iterator();
  }

  public void addToServices(ServiceType elem) {
    if (this.services == null) {
      this.services = new HashSet<ServiceType>();
    }
    this.services.add(elem);
  }

  public Set<ServiceType> getServices() {
    return this.services;
  }

  public ShortUserInfo setServices(Set<ServiceType> services) {
    this.services = services;
    return this;
  }

  public void unsetServices() {
    this.services = null;
  }

  /** Returns true if field services is set (has been assigned a value) and false otherwise */
  public boolean isSetServices() {
    return this.services != null;
  }

  public void setServicesIsSet(boolean value) {
    if (!value) {
      this.services = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case FIRST_NAME:
      if (value == null) {
        unsetFirstName();
      } else {
        setFirstName((String)value);
      }
      break;

    case LAST_NAME:
      if (value == null) {
        unsetLastName();
      } else {
        setLastName((String)value);
      }
      break;

    case RATING:
      if (value == null) {
        unsetRating();
      } else {
        setRating((Integer)value);
      }
      break;

    case AVATAR:
      if (value == null) {
        unsetAvatar();
      } else {
        setAvatar((String)value);
      }
      break;

    case GROUP_TYPE:
      if (value == null) {
        unsetGroupType();
      } else {
        setGroupType((GroupType)value);
      }
      break;

    case MODERATION_GROUPS:
      if (value == null) {
        unsetModerationGroups();
      } else {
        setModerationGroups((Set<Long>)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case SERVICES:
      if (value == null) {
        unsetServices();
      } else {
        setServices((Set<ServiceType>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case FIRST_NAME:
      return getFirstName();

    case LAST_NAME:
      return getLastName();

    case RATING:
      return Integer.valueOf(getRating());

    case AVATAR:
      return getAvatar();

    case GROUP_TYPE:
      return getGroupType();

    case MODERATION_GROUPS:
      return getModerationGroups();

    case ADDRESS:
      return getAddress();

    case SERVICES:
      return getServices();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case FIRST_NAME:
      return isSetFirstName();
    case LAST_NAME:
      return isSetLastName();
    case RATING:
      return isSetRating();
    case AVATAR:
      return isSetAvatar();
    case GROUP_TYPE:
      return isSetGroupType();
    case MODERATION_GROUPS:
      return isSetModerationGroups();
    case ADDRESS:
      return isSetAddress();
    case SERVICES:
      return isSetServices();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ShortUserInfo)
      return this.equals((ShortUserInfo)that);
    return false;
  }

  public boolean equals(ShortUserInfo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_firstName = true && this.isSetFirstName();
    boolean that_present_firstName = true && that.isSetFirstName();
    if (this_present_firstName || that_present_firstName) {
      if (!(this_present_firstName && that_present_firstName))
        return false;
      if (!this.firstName.equals(that.firstName))
        return false;
    }

    boolean this_present_lastName = true && this.isSetLastName();
    boolean that_present_lastName = true && that.isSetLastName();
    if (this_present_lastName || that_present_lastName) {
      if (!(this_present_lastName && that_present_lastName))
        return false;
      if (!this.lastName.equals(that.lastName))
        return false;
    }

    boolean this_present_rating = true;
    boolean that_present_rating = true;
    if (this_present_rating || that_present_rating) {
      if (!(this_present_rating && that_present_rating))
        return false;
      if (this.rating != that.rating)
        return false;
    }

    boolean this_present_avatar = true && this.isSetAvatar();
    boolean that_present_avatar = true && that.isSetAvatar();
    if (this_present_avatar || that_present_avatar) {
      if (!(this_present_avatar && that_present_avatar))
        return false;
      if (!this.avatar.equals(that.avatar))
        return false;
    }

    boolean this_present_groupType = true && this.isSetGroupType();
    boolean that_present_groupType = true && that.isSetGroupType();
    if (this_present_groupType || that_present_groupType) {
      if (!(this_present_groupType && that_present_groupType))
        return false;
      if (!this.groupType.equals(that.groupType))
        return false;
    }

    boolean this_present_moderationGroups = true && this.isSetModerationGroups();
    boolean that_present_moderationGroups = true && that.isSetModerationGroups();
    if (this_present_moderationGroups || that_present_moderationGroups) {
      if (!(this_present_moderationGroups && that_present_moderationGroups))
        return false;
      if (!this.moderationGroups.equals(that.moderationGroups))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_services = true && this.isSetServices();
    boolean that_present_services = true && that.isSetServices();
    if (this_present_services || that_present_services) {
      if (!(this_present_services && that_present_services))
        return false;
      if (!this.services.equals(that.services))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ShortUserInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFirstName()).compareTo(other.isSetFirstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstName, other.firstName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastName()).compareTo(other.isSetLastName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastName, other.lastName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRating()).compareTo(other.isSetRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rating, other.rating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAvatar()).compareTo(other.isSetAvatar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvatar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatar, other.avatar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupType()).compareTo(other.isSetGroupType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupType, other.groupType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModerationGroups()).compareTo(other.isSetModerationGroups());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModerationGroups()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moderationGroups, other.moderationGroups);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetServices()).compareTo(other.isSetServices());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServices()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.services, other.services);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ShortUserInfo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("firstName:");
    if (this.firstName == null) {
      sb.append("null");
    } else {
      sb.append(this.firstName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastName:");
    if (this.lastName == null) {
      sb.append("null");
    } else {
      sb.append(this.lastName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rating:");
    sb.append(this.rating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("avatar:");
    if (this.avatar == null) {
      sb.append("null");
    } else {
      sb.append(this.avatar);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("groupType:");
    if (this.groupType == null) {
      sb.append("null");
    } else {
      sb.append(this.groupType);
    }
    first = false;
    if (isSetModerationGroups()) {
      if (!first) sb.append(", ");
      sb.append("moderationGroups:");
      if (this.moderationGroups == null) {
        sb.append("null");
      } else {
        sb.append(this.moderationGroups);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("services:");
    if (this.services == null) {
      sb.append("null");
    } else {
      sb.append(this.services);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ShortUserInfoStandardSchemeFactory implements SchemeFactory {
    public ShortUserInfoStandardScheme getScheme() {
      return new ShortUserInfoStandardScheme();
    }
  }

  private static class ShortUserInfoStandardScheme extends StandardScheme<ShortUserInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ShortUserInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FIRST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.firstName = iprot.readString();
              struct.setFirstNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastName = iprot.readString();
              struct.setLastNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rating = iprot.readI32();
              struct.setRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AVATAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.avatar = iprot.readString();
              struct.setAvatarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // GROUP_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.groupType = GroupType.findByValue(iprot.readI32());
              struct.setGroupTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MODERATION_GROUPS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.moderationGroups = new HashSet<Long>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  long _elem2;
                  _elem2 = iprot.readI64();
                  struct.moderationGroups.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setModerationGroupsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SERVICES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.services = new HashSet<ServiceType>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  ServiceType _elem5;
                  _elem5 = ServiceType.findByValue(iprot.readI32());
                  struct.services.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setServicesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ShortUserInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.firstName != null) {
        oprot.writeFieldBegin(FIRST_NAME_FIELD_DESC);
        oprot.writeString(struct.firstName);
        oprot.writeFieldEnd();
      }
      if (struct.lastName != null) {
        oprot.writeFieldBegin(LAST_NAME_FIELD_DESC);
        oprot.writeString(struct.lastName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RATING_FIELD_DESC);
      oprot.writeI32(struct.rating);
      oprot.writeFieldEnd();
      if (struct.avatar != null) {
        oprot.writeFieldBegin(AVATAR_FIELD_DESC);
        oprot.writeString(struct.avatar);
        oprot.writeFieldEnd();
      }
      if (struct.groupType != null) {
        oprot.writeFieldBegin(GROUP_TYPE_FIELD_DESC);
        oprot.writeI32(struct.groupType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.moderationGroups != null) {
        if (struct.isSetModerationGroups()) {
          oprot.writeFieldBegin(MODERATION_GROUPS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.moderationGroups.size()));
            for (long _iter6 : struct.moderationGroups)
            {
              oprot.writeI64(_iter6);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.services != null) {
        oprot.writeFieldBegin(SERVICES_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.services.size()));
          for (ServiceType _iter7 : struct.services)
          {
            oprot.writeI32(_iter7.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ShortUserInfoTupleSchemeFactory implements SchemeFactory {
    public ShortUserInfoTupleScheme getScheme() {
      return new ShortUserInfoTupleScheme();
    }
  }

  private static class ShortUserInfoTupleScheme extends TupleScheme<ShortUserInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ShortUserInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetFirstName()) {
        optionals.set(1);
      }
      if (struct.isSetLastName()) {
        optionals.set(2);
      }
      if (struct.isSetRating()) {
        optionals.set(3);
      }
      if (struct.isSetAvatar()) {
        optionals.set(4);
      }
      if (struct.isSetGroupType()) {
        optionals.set(5);
      }
      if (struct.isSetModerationGroups()) {
        optionals.set(6);
      }
      if (struct.isSetAddress()) {
        optionals.set(7);
      }
      if (struct.isSetServices()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetFirstName()) {
        oprot.writeString(struct.firstName);
      }
      if (struct.isSetLastName()) {
        oprot.writeString(struct.lastName);
      }
      if (struct.isSetRating()) {
        oprot.writeI32(struct.rating);
      }
      if (struct.isSetAvatar()) {
        oprot.writeString(struct.avatar);
      }
      if (struct.isSetGroupType()) {
        oprot.writeI32(struct.groupType.getValue());
      }
      if (struct.isSetModerationGroups()) {
        {
          oprot.writeI32(struct.moderationGroups.size());
          for (long _iter8 : struct.moderationGroups)
          {
            oprot.writeI64(_iter8);
          }
        }
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetServices()) {
        {
          oprot.writeI32(struct.services.size());
          for (ServiceType _iter9 : struct.services)
          {
            oprot.writeI32(_iter9.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ShortUserInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.firstName = iprot.readString();
        struct.setFirstNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.lastName = iprot.readString();
        struct.setLastNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.rating = iprot.readI32();
        struct.setRatingIsSet(true);
      }
      if (incoming.get(4)) {
        struct.avatar = iprot.readString();
        struct.setAvatarIsSet(true);
      }
      if (incoming.get(5)) {
        struct.groupType = GroupType.findByValue(iprot.readI32());
        struct.setGroupTypeIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set10 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.moderationGroups = new HashSet<Long>(2*_set10.size);
          for (int _i11 = 0; _i11 < _set10.size; ++_i11)
          {
            long _elem12;
            _elem12 = iprot.readI64();
            struct.moderationGroups.add(_elem12);
          }
        }
        struct.setModerationGroupsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TSet _set13 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.services = new HashSet<ServiceType>(2*_set13.size);
          for (int _i14 = 0; _i14 < _set13.size; ++_i14)
          {
            ServiceType _elem15;
            _elem15 = ServiceType.findByValue(iprot.readI32());
            struct.services.add(_elem15);
          }
        }
        struct.setServicesIsSet(true);
      }
    }
  }

}

